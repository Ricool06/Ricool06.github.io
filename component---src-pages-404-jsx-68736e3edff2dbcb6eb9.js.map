{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/image.jsx","webpack:///./src/components/social-links.jsx","webpack:///./src/components/header.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","PureImage","react_default","gatsby_image_default","fluid","image","childImageSharp","any","Image","gatsby_browser_entry","image_PureImage","_3658878243","filePath","PureSocialLinks","allSocialJson","edges","map","edge","node","url","key","style","width","marginLeft","href","Fragment","arrayOf","SocialLinks","social_links_PureSocialLinks","_1066272886","Header","siteTitle","background","marginBottom","margin","maxWidth","padding","display","flex","to","color","textDecoration","social_links","defaultProps","Layout","header","site","siteMetadata","paddingTop","Date","getFullYear","_755544856","detailsQuery","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-jsx-68736e3edff2dbcb6eb9.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nexport const PureImage = ({ data }) => (\n  <Img fluid={data.image.childImageSharp.fluid} />\n);\n\nPureImage.propTypes = {\n  data: PropTypes.shape({\n    image: PropTypes.shape({\n      childImageSharp: PropTypes.shape({\n        fluid: PropTypes.any.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n        query {\n          image: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n            childImageSharp {\n              fluid(maxWidth: 300) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n    render={data => <PureImage {...props} data={data} />}\n  />\n);\n\nImage.propTypes = {\n  filePath: PropTypes.string.isRequired,\n};\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport { PureImage } from './image';\n\nexport const PureSocialLinks = ({ data }) => {\n  const children = data.allSocialJson.edges.map((edge) => {\n    const { node } = edge;\n    const { url } = node;\n    return (\n      <div\n        key={url}\n        style={{\n          width: 50,\n          marginLeft: 1,\n        }}\n      >\n        <a href={url}>\n          <PureImage data={node} />\n        </a>\n      </div>\n    );\n  });\n\n  return (\n    <>\n      {children}\n    </>\n  );\n};\n\nPureSocialLinks.propTypes = {\n  data: PropTypes.shape({\n    allSocialJson: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          url: PropTypes.string.isRequired,\n          image: PropTypes.any.isRequired,\n        }).isRequired,\n      })).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nconst SocialLinks = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allSocialJson {\n          edges {\n            node {\n              url\n              image: file {\n                childImageSharp {\n                  id\n                  fluid(maxWidth: 50) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureSocialLinks {...props} data={data} />}\n  />\n);\n\nexport default SocialLinks;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport SocialLinks from './social-links';\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: '#339988',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n        display: 'flex',\n      }}\n    >\n      <h1\n        style={{\n          margin: 0,\n          flex: '1 1 auto',\n        }}\n      >\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <SocialLinks />\n    </div>\n  </div>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            ©\n            {new Date().getFullYear()}\n            , Built with\n            {' '}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes, { object } from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n\nfunction SEO({\n  description, lang, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  description: '',\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}